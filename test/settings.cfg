; ------------------------------------------------------------------------------------------
; Application configuration file formatted as RFC822 standard
; ------------------------------------------------------------------------------------------


[Alignak-WebUI]
; Application debug mode
; ------------------------------------------------------------------------------------------
; # Set to '1' to activate debug mode for the application
; # This to allow Bottle server to run in debug mode
; debug=1

test_mode=1

; User authentication:
; ------------------------------------------------------------------------------------------
; # Applications backend endpoint
; # Configure this value to change the default backend configuration
; Default is http://127.0.0.1:5000
; alignak_backend = http://127.0.0.1:5002
; alignak_backend = http://94.76.229.155:80
; alignak_backend = http://94.76.229.155:90

; ------------------------------------------------------------------------------------------
; # Glpi WS endpoint
; # Configure these values to connect to the Glpi WS (get hosts, ...)
; Default is None to not connect.
glpi_ws_backend = https://glpi/plugins/webservices/xmlrpc.php
glpi_ws_login = test
glpi_ws_password = test


; # Web server configuration
; ------------------------------------------------------------------------------------------
; Default is listening on TCP port 8868 on local loop interface
; host=127.0.0.1
; port=8868


; # WebUI information (about application modal)
; ------------------------------------------------------------------------------------------
; Overload default information included in the WebUI
about_name=Alignak-WebUI
about_version=0.50.0
about_copyright=2015-2016 - Frédéric MOHIER (frederic.mohier@gmail.com)
about_release=


; # Login form
; ------------------------------------------------------------------------------------------
; Welcome text in the login form.
; Default is no login text (Welcome message ...)
login_text=Welcome to Alignak Web User Interface

; Company logo in the login form and header bar
; company_logo property is suffixed with .png and searched in photos_dir
; Default logo is used if company_logo is not found in photos_dir
; Default logo is always used if company_logo property is empty
; Default logo is default_company.png (Shinken logo) in webui/htdocs/images
;company_logo=my_company


; # Application layout
; ------------------------------------------------------------------------------------------
; Play sound
; Default is no sound
; play_sound=1

; Refresh period
; Number of seconds between each page refresh
; Default value is 60 seconds
; Use 0 to disable refresh
; refresh_period = 10


; # WebUI localization / internationalization
; ------------------------------------------------------------------------------------------
; Preferred locales (default is en_US)
; locale = fr_FR
locale = en_US


; # WebUI timezone (default is Europe/Paris)
; ------------------------------------------------------------------------------------------
; Preferred TZ, default is Europe/Paris
; timezone=Europe/Paris
; Preferred date time formatting, default is %Y-%m-%d %H:%M:%S
; timeformat=%Y-%m-%d %H:%M:%S
; timeformat=%d/%m/%Y %H:%M:%S


[logs]
; Application log files
; ------
; The application buils a log file if launched with --logs command line parameter
; Parameters in this section allow to configure logs file rotation
; ------

# CRITICAL  50
# ERROR     40
# WARNING   30
# INFO      20
# DEBUG     10
# Default is INFO (20)
; level = 20
level = 10

# Application logs directory
# Default is /var/log/"application name"
; dir = .

# Application log filename
# Default is application name with log extension
; filename = webui.log

# Rotation period (D for day, W0...W6 for a week day, or midnight)
; when = D

# Rotation period interval
; interval = 1

# Number of backup files before deletion (0 to disable deletion)
; backup = 6

; ------------------------------------------------------------------------------------------
; Specific elements configuration
; ------------------------------------------------------------------------------------------
; The item section defines the parameters common to all elements
; The session section defines the parameters specific for the session, and so on ...
; If a section does not exist the corresponding item or item. section is used in place.
; --------
; Element state is built with 2 templates:
; - content
; - back
; - front
; In each template a subsitution is made with the live values.
; ##class## is replaced with the item livestate ... to be used as a class defined in the CSS file
; See items_states.css for the classes definition. Class is defined with an 'item_' prefix:
; 'item_active' is the class used for the active state.
;
; ##type## is the item type
; ##name## is the item name
; ##id## is the item id
; ------------------------------------------------------------------------------------------
; ------------------------------------------------------------------------------------------
; Specific elements configuration
; ------------------------------------------------------------------------------------------
; The item section defines the parameters common to all elements
; The session section defines the parameters specific for the session, and so on ...
; If a section does not exist the corresponding item or item. section is used in place.
; --------
; Element state is built with 3 templates:
; - content
; - back
; - front
; In each template a subsitution is made with the live values.
; ##class## is replaced with the item livestate ... to be used as a class defined in the CSS file
; See items_states.css for the classes definition. Class is defined with an 'item_' prefix:
; 'item_active' is the class used for the active state.
;
; ##type## is the item type
; ##name## is the item name
; ##id## is the item id
; ------------------------------------------------------------------------------------------
[buttons]
; Do not remove those variables!
; They MUST be present in the configuration file!
livestate_commands: <div class="btn-group btn-group-xs" style="width:100px" role="group" data-type="actions" title="##title##">##commands##</div>
livestate_command: <button class="btn btn-default" data-type="action" data-action="##action##" 'data-toggle="tooltip" data-placement="top" title="##title##" data-name="##name##" data-element="##id##" ##disabled##><i class="fa fa-##icon##"></i></button>

[tables.lists]
; Do not remove those variables!
; They MUST be present in the configuration file!
button=<button class="btn btn-xs btn-block btn-raised" data-toggle="collapse" data-target="#list_##type##_##id##" aria-expanded="false">##title##</button><div class="collapse" id="list_##type##_##id##"><div class="well">##content##</div></div>
list=<ul class="list-group">##content##</ul>
item=<li class="list-group-item"><span class="fa fa-check">&nbsp;##content##</li>


[items]
; Do not remove those variables!
; They MUST be present in the configuration file!

;
; Not exactly the same content in this test file ... as in the default configuration.
;

; Do not remove those variables!
; They MUST be present in the configuration file!
content: <div class="item-state ##class## ##state##" style="display: inline; font-size:0.9em;" data-item-id="##id##" data-item-name="##name##" data-item-type="##type##">
            <span class="fa-stack" ##opacity## title="##title####extra##">##back####front##</span>
            <span>##text####extra##</span>
         </div>

back: <i class="fa fa-circle fa-stack-2x ##class##"></i>
front: <i class="fa fa-##icon## fa-stack-1x "></i>

badge:  <span class="item-badge ##class## ##state##" data-item-id="##id##" data-item-type="##type##">
            <span class="fa-stack" title="##title##">
                <i class="fa fa-stack-2x fa-circle"></i>
                <i class="fa fa-stack-1x fa-##icon## ##extra##"></i>
            </span>
        </span>


; Default states: open/close/active/inactive/unknown
; Do not remove the following [items.item.*] sections unless you are sure about it!
[items.item.unknown]
class: unknown
text: Unknown
icon: question

[items.item.open]
class: open
text: Opened
icon: check

[items.item.close]
class: close
text: Closed
icon: close

[items.item.active]
class: active
text: Active
icon: check

[items.item.inactive]
class: inactive
text: Inactive
icon: close

; Host: up/down/unreachable
[items.host.up]
class: hostUp
text: Host is up
icon: check

[items.host.down]
class: hostDown
text: Host is down
icon: close

[items.host.unreachable]
class: hostUnreachable
text: Host is unreachable
icon: question

[items.host.unknown]
class: hostUnknown
text: Host is unknown
icon: question

[items.host.ack]
class: hostAck
text: Host is problem and acknowledged
icon: check

[items.host.downtime]
class: hostDowntime
text: Host is in a scheduled downtime
icon: ambulance

; Service: ok/warning/critical
[items.service.ok]
class: serviceOk
text: Service is ok
icon: check

[items.service.critical]
class: serviceCritical
text: Service is critical
icon: close

[items.service.warning]
class: serviceWarning
text: Service is warning
icon: question

[items.service.unknown]
class: serviceUnknown
text: Service is unknown
icon: question

[items.service.ack]
class: serviceAck
text: Service is problem and acknowledged
icon: check

[items.service.downtime]
class: serviceDowntime
text: Service is in a scheduled downtime
icon: ambulance

; Livestate Host: up/down/unreachable
[items.livestate.up]
class: livestateUp
text: Host is up
icon: check

[items.livestate.down]
class: livestateDown
text: Host is down
icon: close

[items.livestate.unreachable]
class: livestateUnreachable
text: Host is unreachable
icon: question

[items.livestate.unknown]
class: livestateUnknown
text: Element is unknown
icon: question

[items.livestate.ack]
class: livestateAck
text: Element is problem and acknowledged
icon: check

[items.livestate.downtime]
class: livestateDowntime
text: Element is in a scheduled downtime
icon: ambulance

; Service: ok/warning/critical
[items.livestate.ok]
class: livestateOk
text: Service is ok
icon: check

[items.livestate.critical]
class: livestateCritical
text: Service is critical
icon: close

[items.livestate.warning]
class: livestateWarning
text: Service is warning
icon: question

; Commands
[items.command.unknown]
class: command
text:
icon: bolt

; Timeperiods
[items.timeperiod.unknown]
class: timeperiod
text:
icon: calendar

; User states: unknown only! Needs refactoring user/user ...
[items.user.unknown]
class: user
text: User default text
icon: user
